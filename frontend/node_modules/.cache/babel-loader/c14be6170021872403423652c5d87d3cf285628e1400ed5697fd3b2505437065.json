{"ast":null,"code":"export const validateLoginForm = _ref => {\n  let {\n    mail,\n    password\n  } = _ref;\n  const isMailValid = validateMail(mail);\n  const isPasswordValid = validatePassword(password);\n  return isMailValid && isPasswordValid;\n};\nexport const validateRegisterForm = _ref2 => {\n  let {\n    mail,\n    password,\n    username\n  } = _ref2;\n  const isMailValid = validateMail(mail);\n  const isPasswordValid = validatePassword(password);\n  const isUsernameValid = validateUsername(username);\n  return isMailValid && isPasswordValid && isUsernameValid;\n};\nconst validatePassword = password => {\n  return password.length > 6 && password.length < 12;\n};\nconst validateMail = mail => {\n  const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n  return emailPattern.test(mail);\n};\nconst isUsernameValid = username => {\n  return username.length > 2 && username.length < 13;\n};","map":{"version":3,"names":["validateLoginForm","mail","password","isMailValid","validateMail","isPasswordValid","validatePassword","validateRegisterForm","username","isUsernameValid","validateUsername","length","emailPattern","test"],"sources":["E:/projects/dicordclone/frontend/src/shared/utils/validators.js"],"sourcesContent":["export const validateLoginForm =({ mail, password}) => {\r\n    const isMailValid = validateMail(mail);\r\n    const isPasswordValid = validatePassword(password);\r\n\r\n    return isMailValid && isPasswordValid;\r\n};\r\n\r\nexport const validateRegisterForm =({ mail, password, username}) => {\r\n    const isMailValid = validateMail(mail);\r\n    const isPasswordValid = validatePassword(password);\r\n    const isUsernameValid = validateUsername(username)\r\n\r\n    return isMailValid && isPasswordValid && isUsernameValid;\r\n};\r\n\r\nconst validatePassword = (password) => {\r\n    return password.length >6 && password.length <12;\r\n};\r\n\r\nconst validateMail = (mail) => {\r\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n    return emailPattern.test(mail);\r\n};\r\n\r\nconst isUsernameValid = (username) => {\r\n     return username.length >2 && username.length <13;\r\n}"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAE,QAAuB;EAAA,IAAtB;IAAEC,IAAI;IAAEC;EAAQ,CAAC;EAC9C,MAAMC,WAAW,GAAGC,YAAY,CAACH,IAAI,CAAC;EACtC,MAAMI,eAAe,GAAGC,gBAAgB,CAACJ,QAAQ,CAAC;EAElD,OAAOC,WAAW,IAAIE,eAAe;AACzC,CAAC;AAED,OAAO,MAAME,oBAAoB,GAAE,SAAiC;EAAA,IAAhC;IAAEN,IAAI;IAAEC,QAAQ;IAAEM;EAAQ,CAAC;EAC3D,MAAML,WAAW,GAAGC,YAAY,CAACH,IAAI,CAAC;EACtC,MAAMI,eAAe,GAAGC,gBAAgB,CAACJ,QAAQ,CAAC;EAClD,MAAMO,eAAe,GAAGC,gBAAgB,CAACF,QAAQ,CAAC;EAElD,OAAOL,WAAW,IAAIE,eAAe,IAAII,eAAe;AAC5D,CAAC;AAED,MAAMH,gBAAgB,GAAIJ,QAAQ,IAAK;EACnC,OAAOA,QAAQ,CAACS,MAAM,GAAE,CAAC,IAAIT,QAAQ,CAACS,MAAM,GAAE,EAAE;AACpD,CAAC;AAED,MAAMP,YAAY,GAAIH,IAAI,IAAK;EAC3B,MAAMW,YAAY,GAAG,iDAAiD;EACtE,OAAOA,YAAY,CAACC,IAAI,CAACZ,IAAI,CAAC;AAClC,CAAC;AAED,MAAMQ,eAAe,GAAID,QAAQ,IAAK;EACjC,OAAOA,QAAQ,CAACG,MAAM,GAAE,CAAC,IAAIH,QAAQ,CAACG,MAAM,GAAE,EAAE;AACrD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}