{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const Slice = createSlice({\n  name: \"slice\",\n  initialState: {\n    value: 0\n  },\n  reducers: {\n    setData: (state, action) => {\n      state.value = action.payload;\n    }\n  }\n});\n\n// Below actions can performed by dispatching like useDispatch(setData(value))\nexport const {\n  setData\n} = Slice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectValue = state => state.slice.value;\nexport default Slice.reducer;","map":{"version":3,"names":["createSlice","Slice","name","initialState","value","reducers","setData","state","action","payload","actions","selectValue","slice","reducer"],"sources":["E:/projects/dicordclone/frontend/src/redux/Slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const Slice = createSlice({\r\n  name: \"slice\",\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    setData: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Below actions can performed by dispatching like useDispatch(setData(value))\r\nexport const { setData } = Slice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectValue = (state) => state.slice.value;\r\n\r\nexport default Slice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,KAAK,GAAGD,WAAW,CAAC;EAC/BE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEH;AAAQ,CAAC,GAAGL,KAAK,CAACS,OAAO;;AAExC;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAIJ,KAAK,IAAKA,KAAK,CAACK,KAAK,CAACR,KAAK;AAEvD,eAAeH,KAAK,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}